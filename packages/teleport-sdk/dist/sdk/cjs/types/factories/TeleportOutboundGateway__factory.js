"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TeleportOutboundGateway__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_l2CrossDomainMessenger",
                type: "address",
            },
            {
                internalType: "address",
                name: "_l2Token",
                type: "address",
            },
            {
                internalType: "address",
                name: "_l1WormholeGateway",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "_domain",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [],
        name: "Closed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "usr",
                type: "address",
            },
        ],
        name: "Deny",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "what",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "domain",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "data",
                type: "uint256",
            },
        ],
        name: "File",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "targetDomain",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "dai",
                type: "uint256",
            },
        ],
        name: "Flushed",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "usr",
                type: "address",
            },
        ],
        name: "Rely",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "sourceDomain",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "targetDomain",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "receiver",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "operator",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint128",
                        name: "amount",
                        type: "uint128",
                    },
                    {
                        internalType: "uint80",
                        name: "nonce",
                        type: "uint80",
                    },
                    {
                        internalType: "uint48",
                        name: "timestamp",
                        type: "uint48",
                    },
                ],
                indexed: false,
                internalType: "struct WormholeGUID",
                name: "wormhole",
                type: "tuple",
            },
        ],
        name: "WormholeInitialized",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "batchedDaiToFlush",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "close",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "usr",
                type: "address",
            },
        ],
        name: "deny",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "domain",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "what",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "domain",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "data",
                type: "uint256",
            },
        ],
        name: "file",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "targetDomain",
                type: "bytes32",
            },
        ],
        name: "flush",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "targetDomain",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
            },
        ],
        name: "initiateWormhole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "targetDomain",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
            },
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
        ],
        name: "initiateWormhole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "targetDomain",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "receiver",
                type: "bytes32",
            },
            {
                internalType: "uint128",
                name: "amount",
                type: "uint128",
            },
            {
                internalType: "bytes32",
                name: "operator",
                type: "bytes32",
            },
        ],
        name: "initiateWormhole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "isOpen",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "l1WormholeGateway",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "l2Token",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "messenger",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "usr",
                type: "address",
            },
        ],
        name: "rely",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        name: "validDomains",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "wards",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class TeleportOutboundGateway__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TeleportOutboundGateway__factory = TeleportOutboundGateway__factory;
TeleportOutboundGateway__factory.abi = _abi;
