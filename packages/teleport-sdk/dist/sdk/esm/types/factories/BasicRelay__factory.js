/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, utils } from "ethers";
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_oracleAuth",
                type: "address",
            },
            {
                internalType: "address",
                name: "_daiJoin",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "dai",
        outputs: [
            {
                internalType: "contract TokenLike",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "daiJoin",
        outputs: [
            {
                internalType: "contract DaiJoinLike",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "oracleAuth",
        outputs: [
            {
                internalType: "contract TeleportOracleAuthLike",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "sourceDomain",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "targetDomain",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "receiver",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "operator",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint128",
                        name: "amount",
                        type: "uint128",
                    },
                    {
                        internalType: "uint80",
                        name: "nonce",
                        type: "uint80",
                    },
                    {
                        internalType: "uint48",
                        name: "timestamp",
                        type: "uint48",
                    },
                ],
                internalType: "struct TeleportGUID",
                name: "teleportGUID",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "signatures",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "maxFeePercentage",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "gasFee",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expiry",
                type: "uint256",
            },
            {
                internalType: "uint8",
                name: "v",
                type: "uint8",
            },
            {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
            },
        ],
        name: "relay",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "teleportJoin",
        outputs: [
            {
                internalType: "contract TeleportJoinLike",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
export class BasicRelay__factory {
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
BasicRelay__factory.abi = _abi;
